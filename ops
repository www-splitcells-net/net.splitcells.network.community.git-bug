{"version":1,"ops":[{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663503145,"metadata":{"github-id":"UCE_lAHOFCNQW84xLOCQzjQVzHs"},"target":"788230e70b7b1b07a6f9c4b501bcf8e2add57f1df72fc7461c5378b09f9dbc83","message":"# Sub Tasks\nFor this to work, the source code also have to comply with the grammar, when this issue is done.\n\n- [x] Ensure that Dem complies with new custom Java grammar.\n- [ ] Create basis for Translation . Use JavaParser for translation only instead of the Java grammer,\nin order to support some standard Java things/classes/method via name resolution\nwithout creating own wrapper interfaces and objects.\n- [ ] Make grammar clean, so it's straight forward to process for translations and to understand.\n- [ ] Every grammar rule should represent only a meaning and not any technical grammar specific artifacts/rules.\n- [x] Detailed Javadoc grammar. -\u003e task is migrated into repo and will be done later.\n- [ ] Review grammar.\n- [x] Disable checks for bootstrap code. -\u003e In the grammar it is called legacy code.\n- [x] Split up Dem into core and merger.\n- [x] Add grammar check to CI build. -\u003e Source code check was added to capabilities check.\n- [x] Fix usage fragments. Currently, they often do not work and require Tokens for matches and the respective Regex do not work.\n- [x] Use mixed grammar, which makes it possible to used fragment tokens more effectively (currently these are broken). -\u003e Split up grammars are better, because lexer work in ANTLR more like validator if one ignores string patterns.\n- [x] Remove explicit whitespace matches.\n- [x] Document how to do non combined grammar.\n- [x] Document how to do combined grammar. -\u003e Not needed.\n- [x] Use upper case for Keywords in Lexer.\n- [x] Use constants in parser instead of tokens, in order to make these 2 more independent of each other. -\u003e This does not have a real advantage.\n- [x] Reformat grammar source code.\n- [x] Create core project for Dem in order to test interface and implementation splitting.\n- [x] Test speed up via using faster alternatives for data structures: Maps, Sets, Lists -\u003e What is this?\n- [x] Only allow foreign code import like the Java standard library in Java legacy code with some exceptions to the Java standard library like `java.util.List`. Currently, only Java standard library imports are blocked.\n- [ ] Let all source code comply with Java grammar.\n- [ ] Update Java guidelines.\n# Tasks For Future Tickets\n- [ ] Remove direct usage of Path (because resolve method allows resolving absolute paths), Files (because changing the backend does not seem to be viable) and similar in the future.\n- [ ] Remove interface extension by java.* for data structure in order to minimize legacy code in order to increase portability.\n- [ ] Make main part GPL compliant and only extensions non GPL compliant.\n   - [ ] Note on planned future license change.\n   - [ ] Adjust licence from `MIT + EPL 2.0` to `MIT + EPL 2.0 + GPL +2.0`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663503178,"metadata":{"github-id":"UCE_lAHOFCNQW84xLOCQzjQVzOA"},"target":"788230e70b7b1b07a6f9c4b501bcf8e2add57f1df72fc7461c5378b09f9dbc83","message":"# Sub Tasks\nFor this to work, the source code also have to comply with the grammar, when this issue is done.\n\n- [x] Ensure that Dem complies with new custom Java grammar.\n- [ ] Create basis for Translation . Use JavaParser for translation only instead of the Java grammer,\nin order to support some standard Java things/classes/method via name resolution\nwithout creating own wrapper interfaces and objects.\n- [ ] Make grammar clean, so it's straight forward to process for translations and to understand.\n- [ ] Every grammar rule should represent only a meaning and not any technical grammar specific artifacts/rules.\n- [x] Detailed Javadoc grammar. -\u003e task is migrated into repo and will be done later.\n- [ ] Review grammar.\n- [x] Disable checks for bootstrap code. -\u003e In the grammar it is called legacy code.\n- [x] Split up Dem into core and merger.\n- [x] Add grammar check to CI build. -\u003e Source code check was added to capabilities check.\n- [x] Fix usage fragments. Currently, they often do not work and require Tokens for matches and the respective Regex do not work.\n- [x] Use mixed grammar, which makes it possible to used fragment tokens more effectively (currently these are broken). -\u003e Split up grammars are better, because lexer work in ANTLR more like validator if one ignores string patterns.\n- [x] Remove explicit whitespace matches.\n- [x] Document how to do non combined grammar.\n- [x] Document how to do combined grammar. -\u003e Not needed.\n- [x] Use upper case for Keywords in Lexer.\n- [x] Use constants in parser instead of tokens, in order to make these 2 more independent of each other. -\u003e This does not have a real advantage.\n- [x] Reformat grammar source code.\n- [x] Create core project for Dem in order to test interface and implementation splitting.\n- [x] Test speed up via using faster alternatives for data structures: Maps, Sets, Lists -\u003e What is this?\n- [x] Only allow foreign code import like the Java standard library in Java legacy code with some exceptions to the Java standard library like `java.util.List`. Currently, only Java standard library imports are blocked.\n- [ ] Let all source code comply with Java grammar.\n- [ ] Update Java guidelines.\n# Tasks For Future Tickets\n- [ ] Remove direct usage of Path (because resolve method allows resolving absolute paths), Files (because changing the backend does not seem to be viable) and similar in the future.\n- [ ] Remove interface extension by java.* for data structure in order to minimize legacy code in order to increase portability.\n- [ ] Make main part GPL compliant and only extensions non GPL compliant: https://github.com/www-splitcells-net/net.splitcells.network/issues/88\n   - [ ] Note on planned future license change.\n   - [ ] Adjust licence from `MIT + EPL 2.0` to `MIT + EPL 2.0 + GPL +2.0`.","files":null}]}