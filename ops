{"version":1,"ops":[{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662159493,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjNccR4"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662160163,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjNcf1E"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [ ] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests.\n       * [ ] Log execution of side effect tests.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662160184,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjNcf6c"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [ ] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662160273,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjNcgW8"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [ ] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662852539,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjO1qLc"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662853299,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjO1rkg"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662853303,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjO1rlc"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662853324,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjO1rpM"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`. -\u003e Create set of test commands.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662853334,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjO1rrE"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`. -\u003e Create set of test commands, that execute all available tests.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663353538,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjQNGD8"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Create set of test commands, that execute all available tests.\n       * [ ] Create a command that executes all tests and can be executed like any installed command.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663353866,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjQNJ6k"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Create set of test commands, that execute all available tests.\n       * [ ] Create a command that executes all tests and can be executed like any installed command.\n       * [ ] Adjust test project command, so it installs OSI first and then executes the newly created complete test command.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663353985,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjQNLQc"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [ ] Create set of test commands, that execute all available tests.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [ ] Adjust test project command, so it installs OSI first and then executes the newly created complete test command.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663354021,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjQNLpc"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed?\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [ ] Adjust test project command, so it installs OSI first and then executes the newly created complete test command.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663354028,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjQNLuA"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [ ] Adjust test project command, so it installs OSI first and then executes the newly created complete test command.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663960779,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjRmczI"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663960815,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjRmdNs"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [ ] Log execution of side effect free tests via `bin/test.routine`.\n       * [ ] Log execution of side effect tests.\n       * [ ] Create guidelines for test types via project command.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663961127,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjRmg5g"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [ ] Create guidelines for test types via project command.\n       * [ ] Execute OSI test in CI via `bin/test.routine` of network project.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663961217,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjRmiDo"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [ ] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [ ] Execute OSI test in CI via `bin/test.routine` of network project.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663961220,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjRmiGA"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [ ] Execute OSI test in CI via `bin/test.routine` of network project.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663961305,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjRmi_o"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [ ] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [ ] Disable dependencies test on local computer.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665176922,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjUlShY"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [ ] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665177751,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjUlaJY"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [ ] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [x] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665219185,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjUoRPc"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [x] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [x] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [ ] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665221184,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjUoXeE"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [x] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [x] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts`\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665933622,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjWI0PE"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [x] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [x] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [ ] `net.splitcells.osi.repos.hosts` -\u003e Not done for now, because it is only in `repo.push.at.all.py`, which is too specific. Host processing should be located in a dedicated command, that iterates over all hosts. As long as there are not multiple commands working on `net.splitcells.osi.repos.hosts`, this is skipped.\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665933624,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjWI0Pk"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [ ] Test functionality.\n   * [x] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [x] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts` -\u003e Not done for now, because it is only in `repo.push.at.all.py`, which is too specific. Host processing should be located in a dedicated command, that iterates over all hosts. As long as there are not multiple commands working on `net.splitcells.osi.repos.hosts`, this is skipped.\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665933625,"metadata":{"github-id":"UCE_lAHOFCNQW85Dv2uuzjWI0P8"},"target":"23233b0d3aacf536988cff964aed8560b0173e378f522532d51248936b9a7170","message":"Currently, pushing to public repo forges like GitHub or SourceHut is only done via custom shell script.\nIn the future, it would be good if `repo.*` commands of OS state interface could be used as well,\nbut they need to be enhanced.\nThis would simplify the management of repos and mirrors,\nbecause currently, for every repo and repo forge, a dedicated command is needed in the custom scripts.\nThis would also enhance the usability of OS state interface's `repo.*` commands.\n\n* [x] Use and document project command as config, because it adds the least amount of project file system complexity,\nwhile providing more features via dynamic configs.\n* [x] Adapt repo.process` to this new config.\n   * [x] `net.splitcells.osi.repos.peers` in `repo.process`\n      * [x] Read file if present in local repo.\n      * [x] List all individual repos.\n      * [x] Move processing of sub repo to dedicated method, that does not know where the sub is located.\n      * [x] Call sub process method on peer elements.\n   * [x] `net.splitcells.osi.repos.hosts` via new command `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Use `repo.process` in order to push to peer repos and not only to the current repo.\n      * [x] Abort process on first error.\n      * [x] Document `$peerRepo` of `repo.process`.\n   * [x] `net.splitcells.osi.repos.hosts` via `repo.push.at.all`.\n      * [x] Generate URLs via `net.splitcells.osi.repos.hosts`.\n      * [x] Process URLs.\n      * [x] Propagate values to child repo calls of `repo.process`. \n      * [x] Provide these values to command calls during the processing of one repo node,\n         so it could be used by `repo.push.at.all`.\n* [x] Document this.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts`\n* [x] Test functionality.\n   * [x] Improve test infrastructure:\n       * [x] Log that `dependencies.test` was executed.\n       * [x] Create set of test commands, that execute all available tests. -\u003e It's not sure, if this is really needed.\n       * [x] Create a command that executes all tests and can be executed like any installed command.\n       * [x] Adjust test project command, so it installs OSI first and then executes the newly created complete test command. -\u003e This is now not done by default, but can be enabled via `user.bin.configure.uses.test.dependencies`.\n       * [x] Log execution of side effect free tests via `bin/test.routine`. -\u003e This is done via `user.bin.configure`.\n       * [x] Log execution of side effect tests. -\u003e This is done via `user.bin.configure`.\n       * [x] Create guidelines for test types via project command. -\u003e Not needed yet, as not many tests are present and the common ground can be easily seen via `test.dependencies.sh`\n       * [x] Execute OSI test in CI via `bin/test.routine` of network project.\n       * [x] Disable dependencies test on local computer.\n   * [x] `net.splitcells.osi.repos.peers`\n   * [x] `net.splitcells.osi.repos.hosts` -\u003e Not done for now, because it is only in `repo.push.at.all.py`, which is too specific. Host processing should be located in a dedicated command, that iterates over all hosts. As long as there are not multiple commands working on `net.splitcells.osi.repos.hosts`, this is skipped.\n* [x] Document all public and private arguments of `repo.process`.\n* [x] Document `$subRepo` of `repo.process`.","files":null},{"type":4,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665934917,"metadata":{"github-id":"CE_lADOFCNQW85Dv2uuzwAAAAHEyiEn"},"status":2}]}