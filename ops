{"version":1,"ops":[{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666734060,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjYQeKw"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page.\n* [ ] Use git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666734141,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjYQfHo"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects.\n* [ ] Use git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666734399,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjYQihI"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667134435,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPOO0"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667134441,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPOQ0"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667137336,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPYHU"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [] Create setup instructions:\n   ```\nsudo apt-get install --no-install-recommends python3 docker.io docker-compose black shellcheck\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup install nightly\nrustup toolchain install nightly\ncargo build\n```\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   ```\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n```\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667137359,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPYLs"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [] Create setup instructions:\n   `\nsudo apt-get install --no-install-recommends python3 docker.io docker-compose black shellcheck\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup install nightly\nrustup toolchain install nightly\ncargo build\n`\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   `\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n`\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667137379,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPYPk"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [] Create setup instructions:\n   `\nsudo apt-get install --no-install-recommends python3 docker.io docker-compose black shellcheck\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup install nightly\nrustup toolchain install nightly\ncargo build\n`\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667137392,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPYRs"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [] Create setup instructions:\n   \n```\nsudo apt-get install --no-install-recommends python3 docker.io docker-compose black shellcheck\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup install nightly\nrustup toolchain install nightly\ncargo build\n```\n\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667137404,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPYVI"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions:\n```\nsudo apt-get install --no-install-recommends python3 docker.io docker-compose black shellcheck\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup install nightly\nrustup toolchain install nightly\ncargo build\n```\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1667137661,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjZPZD8"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions:\n```\nsudo apt-get install --no-install-recommends python3 docker.io docker-compose black shellcheck\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup install nightly\nrustup toolchain install nightly\ncargo build\n```\n   * [ ] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668299066,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjcPj2M"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [ ] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [ ] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668299070,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjcPj3E"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [ ] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668796116,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjdopjw"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668796118,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjdopls"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [x] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668797094,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjdo2PM"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n   * `repo.process --command='grm repos find local $(pwd) --format yaml' \u003e ../config.yml\n`\n   * Remove all occurrences of `trees:` except the first one in the resulting `../config.yml`, in order to make it correct.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668797117,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjdo2hU"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [x] Create git-repo-manager config via `repo.process`.\n   * `repo.process --command='grm repos find local $(pwd) --format yaml' \u003e ../config.yml\n`\n   * Remove all occurrences of `trees:` except the first one in the resulting `../config.yml`, in order to make it correct.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1668797158,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjdo28o"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation good for `repo.process`.\n   * [ ] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`.\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n   * `repo.process --command='grm repos find local $(pwd) --format yaml' \u003e ../config.yml\n`\n   * Remove all occurrences of `trees:` except the first one in the resulting `../config.yml`, in order to make it correct.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"8f18fdff7c4147cfc375cbcf472669a986e9d714"},"timestamp":1669415075,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjfG8hg"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create documentation good for `repo.process`.\n   * [x] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`. -\u003e Use normal documentation files in this case instead, because it is\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n   * `repo.process --command='grm repos find local $(pwd) --format yaml' \u003e ../config.yml\n`\n   * Remove all occurrences of `trees:` except the first one in the resulting `../config.yml`, in order to make it correct.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":6,"author":{"id":"8f18fdff7c4147cfc375cbcf472669a986e9d714"},"timestamp":1669415083,"metadata":{"github-id":"UCE_lAHOFCNQW85U0ktzzjfG8j4"},"target":"c73665cc7c52248170b07144039988f01ecbaebdf670a3e5fc7245663c5e9acd","message":"* https://github.com/hakoerber/git-repo-manager\n* [ ] Create setup instructions for Ubuntu:\n```\nsudo apt install --no-install-recommends python3 docker.io docker-compose black shellcheck\nsudo apt install rustup # cargo and rustc should not be installed as otherwise the nightly toolchain cannot be used via rustup.\ncd Documents/projects/\ngit clone git@github.com:hakoerber/git-repo-manager.git\ncd git-repo-manager\nrustup toolchain install nightly\ncargo +nightly install git-repo-manager\n```\n   * [x] https://hakoerber.github.io/git-repo-manager/developing.html\n   * [x] How to use nightly cargo build, as otherwise build does not work?\n   ```\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:1:12\n  |\n1 | #![feature(io_error_more)]\n  |            ^^^^^^^^^^^^^\n\nerror[E0554]: `#![feature]` may not be used on the stable release channel\n --\u003e src/lib.rs:2:12\n  |\n2 | #![feature(const_option_ext)]\n  |            ^^^^^^^^^^^^^^^^\n\n```\nFor more information about this error, try `rustc --explain E0554`.\nerror: could not compile `git-repo-manager` due to 2 previous errors\n\n* [ ] Create good documentation for `repo.process`.\n   * [x] Create strategy for help text and documentation page. Maybe descriptions should always be CommonMark format.\n      Execute command for documentation, but with an environment variable being set, which disables any effects. -\u003e Use dedicated help commands. This may also enable documentation injection in the future. Such commands are placed in `src/doc/[source language]`. -\u003e Use normal documentation files in this case instead, because it is\n* [ ] Consider git-repo-manager as a CLI for libgit2, via dependency injection.\n* [ ] Consider git-repo-manager an alternative to `repo.process` and document results.\n   Document the difference between the 2.\n* [ ] Create git-repo-manager config via `repo.process`.\n   * `repo.process --command='grm repos find local $(pwd) --format yaml' \u003e ../config.yml\n`\n   * Remove all occurrences of `trees:` except the first one in the resulting `../config.yml`, in order to make it correct.\n* [ ] Contact maintainer (seems to be German) and propose sharing a common config interface.\n   * [ ] `repo.process` has a more adaptable config, which can be a lot simpler than git-repo-manager.\n   * [ ] `repo.process` as a script generator.\n   * [ ] git-repo-manager on the other hand is much more integrated into git.","files":null},{"type":5,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666731004,"metadata":{"github-id":"LE_lADOFCNQW85U0ktzzwAAAAHI_xkJ"},"added":["documentation"],"removed":[]},{"type":5,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666731004,"metadata":{"github-id":"LE_lADOFCNQW85U0ktzzwAAAAHI_xkN"},"added":["enhancement"],"removed":[]},{"type":2,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666734069,"metadata":{"github-id":"RTE_lADOFCNQW85U0ktzzwAAAAHJA4gI"},"title":"Consider compatibility with git-repo-manager.","was":"Consider compatibility with git-repo-manager."}]}