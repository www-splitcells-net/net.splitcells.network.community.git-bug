{"version":1,"ops":[{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662901091,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjO3sOw"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [ ] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662901107,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjO3sRg"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [x] Create release script.\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1662901159,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjO3sco"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [ ] Use Bill of material in order to keep managing versions of all projects simple: http://djl.ai/bom/\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663356561,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjQNoPQ"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [ ] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663356567,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjQNoSg"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [ ] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663360460,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjQOS8A"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663360463,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjQOS-M"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964122,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnC2U"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [ ] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964182,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnDfs"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964415,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnF7g"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964416,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnF8s"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964684,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnI1E"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [ ] Create sources.\n         - [ ] Create javadoc.\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964710,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnJKA"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [ ] Create javadoc.\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964713,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnJMc"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [ ] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1663964720,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjRnJP8"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [ ] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [x] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665222131,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUoaNQ"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [ ] Deploy javadoc.\n         - [x] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665272614,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq5qA"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [ ] SIng files with GPG/PGP\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665274081,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq9U4"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [ ] Sing files with GPG/PGP.\n            - [ ] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665274881,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_QQ"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [ ] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665274885,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_RQ"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [ ] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665274967,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_ck"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [x] Create Minimum POM information\n- [ ] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665274968,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_dI"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [x] Create Minimum POM information\n- [x] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665275021,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_ko"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n- [x] Create Minimum POM information\n- [x] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums\n- [ ] Public Maven-Release is not required right now. When to do it?","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665275103,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_vc"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] url\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Informations\n- [ ] Release to Maven Central. Do this with multiple deploys and not multiple release performs.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n   - [ ] https://medium.com/geekculture/how-to-publish-artifacts-on-maven-central-24342fd286cd\n- [x] Create Minimum POM information\n- [x] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums\n- [ ] Public Maven-Release is not required right now. When to do it?","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665275146,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjUq_5w"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create Javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy Javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] URL\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Information\n- [ ] Release to Maven Central.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n   - [ ] https://medium.com/geekculture/how-to-publish-artifacts-on-maven-central-24342fd286cd\n- [x] Create Minimum POM information\n- [x] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums\n- [ ] Public Maven-Release is not required right now. When to do it?","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1665940623,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjWJLOc"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create Javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy Javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] URL\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Information\n- [ ] Release to Maven Central.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n   - [ ] https://medium.com/geekculture/how-to-publish-artifacts-on-maven-central-24342fd286cd\n- [x] Create Minimum POM information\n- [x] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums\n- [ ] Public Maven-Release is not required right now. When to do it? -\u003e Do it, when the first version is published via FlatHub. See #195","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666374069,"metadata":{"github-id":"UCE_lAHOFCNQW848IOAKzjXfWiI"},"target":"5913f30416f87abdfa748b47bbfb9bac606f07e45bc5c8effff576fa2d463016","message":"This makes sure, that the Java code is releasable via Maven at any time.\n\n- [x] Create guidelines/checklist for Maven Central public release.\n- [ ] Release to GitHub repo first for initial testing.\n   - [x] https://stackoverflow.com/questions/53637262/setting-the-developerconnection-for-the-maven-release-plugin-from-the-command-li/54250791#54250791\n   - [ ] https://axelfontaine.com/blog/dead-burried.html\n   - [x] Make snapshot deployments:\n      - [x] `mci \u0026\u0026 mvn deploy -Drepo-github-enable=1`\n      - [x] [Ensure GitHub authentication works.](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry)\n      - [x] Document Maven repo on GitHub as an alternative to Maven Central, which would especially suitable for snapshot builds.\n      - [x] Test and document using snapshot builds as a dependency. Use a dedicated settings file with environment variables for this (see https://stackoverflow.com/questions/31251259/how-to-pass-maven-settings-via-environmental-vars and https://stackoverflow.com/questions/25277866/maven-command-line-how-to-point-to-a-specific-settings-xml-for-a-single-command).\n      - [x] Use temporary m2 folder for testing.\n      - [x] Use all projects as Snapshot dependencies for system project, which in turn can be used as a full GitHub test.\n      - [x] #190\n   - [x] Create release script. -\u003e `bin/build.with.github.snapshots`\n```\nmci\nmvn release:prepare -Drepo-github-enable=1\nmvn release:perform -Drepo-github-enable=1\n```\n- [ ] Create release guidelines.\n   - [ ] https://dzone.com/articles/how-to-create-and-release-a-jar-to-maven-central\n      - [ ] https://maven.apache.org/repository/guide-central-repository-upload.html\n         - [x] Create sources.\n         - [x] Create Javadoc.\n         - [x] Deploy sources.\n         - [x] Deploy Javadoc.\n         - [x] Provide checksums.\n         - [x] Sing files with GPG/PGP.\n            - [x] Document singing process.\n         - [x] name\n         - [x] description\n         - [x] URL\n         - [x] License\n         - [x] Developer Information\n         - [x] SCM Information\n- [ ] Release to Maven Central.\n   - [ ] https://central.sonatype.org/publish/publish-guide/\n   - [ ] https://medium.com/geekculture/how-to-publish-artifacts-on-maven-central-24342fd286cd\n- [x] Create Minimum POM information\n- [x] Add PGP signing: https://central.sonatype.org/publish/requirements/#provide-files-checksums\n- [ ] Public Maven-Release is not required right now. When to do it? -\u003e Do it, when the first version is published via FlatHub. See #195 \n- [ ] Create guidelines how to do formal releases. Maybe do a release every half year, with the date as the real version number?","files":null}]}