{"version":1,"ops":[{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666368479,"metadata":{"github-id":"UCE_lAHOFCNQW85CKOmTzjXeNa8"},"target":"2f7b205610897d9e668b844d1a8d5e8fc5758731184aee4c164c8ac1a77d9e48","message":"This is also the basis for #88.\n* [ ] Use a dedicated folder for projects with no dependencies, except for the standard runtime (Java Runtime). -\u003e Code integrating dependencies should be moved to dedicated projects. \n* [ ] Create minimal `pom.java.default` and use it for pure projects. Existing `pom.java.default` should depend on this POM. The goal is to have a viable `pom.java.default` without dependencies (i.e. JUnit).","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666368796,"metadata":{"github-id":"UCE_lAHOFCNQW85CKOmTzjXeRt4"},"target":"2f7b205610897d9e668b844d1a8d5e8fc5758731184aee4c164c8ac1a77d9e48","message":"This is also the basis for #88.\n* [ ] Use a dedicated folder for projects with no dependencies, except for the standard runtime (Java Runtime). -\u003e Code integrating dependencies should be moved to dedicated projects. \n* [ ] Create alternative to JUnit. Do not try to salvage JUnit Test annotation, because it will never be portable (JUnit 4 and 5 have a different basic Test annotation).\n* [ ] Create minimal `pom.java.default` and use it for pure projects. Existing `pom.java.default` should depend on this POM. The goal is to have a viable `pom.java.default` without dependencies (i.e. JUnit).","files":null},{"type":6,"author":{"id":"96d5451eb56f6bba7bab9f977793056e8c78923a"},"timestamp":1666370059,"metadata":{"github-id":"UCE_lAHOFCNQW85CKOmTzjXeh4M"},"target":"2f7b205610897d9e668b844d1a8d5e8fc5758731184aee4c164c8ac1a77d9e48","message":"This is also the basis for #88.\n* [ ] Use a dedicated folder for projects with no dependencies, except for the standard runtime (Java Runtime). -\u003e Code integrating dependencies should be moved to dedicated projects. \n* [ ] Create alternative to JUnit. Do not try to salvage JUnit Test annotation, because it will never be portable (JUnit 4 and 5 have a different basic Test annotation).\n   * [ ] Consider using only annotation and generic of kara test framework: https://github.com/karatelabs/karate\n      * [ ] Test IDE support: https://github.com/karatelabs/karate/wiki/IDE-Support\n   * [ ] Following could be used to integrate other test frameworks like JUnit, PIT and Code coverage: render all Java code to new temporary project. Replace test annotations as needed and execute test framework as needed.\n* [ ] Create minimal `pom.java.default` and use it for pure projects. Existing `pom.java.default` should depend on this POM. The goal is to have a viable `pom.java.default` without dependencies (i.e. JUnit).","files":null}]}